---
name: "Create Gitea Auto PR"
description: Create a new PR on Gitea.
inputs:
  url:
    description: URL to the Gitea instance
    required: true
  token:
    description: Personal access token to the Gitea instance
    required: true
  path:
    description: >
      Relative path under $GITHUB_WORKSPACE to the repository.
      Defaults to $GITHUB_WORKSPACE.
  commit-message:
    description: 'The message to use when committing changes.'
    default: '[create-pull-request] automated change'
  committer:
    description: >
      The committer name and email address in the format `Display Name <email@address.com>`.
      Defaults to the GitHub Actions bot user.
    default: 'github-actions[bot] <41898282+github-actions[bot]@users.noreply.github.com>'
  author:
    description: >
      The author name and email address in the format `Display Name <email@address.com>`.
      Defaults to the user who triggered the workflow run.
    default: '${{ github.actor }} <${{ github.actor_id }}+${{ github.actor }}@users.noreply.github.com>'
  signoff:
    description: 'Add `Signed-off-by` line by the committer at the end of the commit log message.'
    default: 'false'
  base:
    description: >
      The pull request base branch.
      Defaults to the branch checked out in the workflow.
  branch:
    description: 'The pull request branch name.'
    default: 'create-pull-request/patch'
  title:
    description: 'The title of the pull request.'
    default: 'Changes by create-pull-request action'
  body:
    description: 'The body of the pull request.'
    default: 'Automated changes by actions'
  body-path:
    description: 'The path to a file containing the pull request body. Takes precedence over `body`.'
  tea-version:
    description: Tea CLI version
    required: true
    default: 0.9.2
  pr-label:
    description: Issues label for the PR
  assignee:
    description: User to assign the PR to

branding:
  icon: git-pull-request
  color: green

runs:
  using: composite
  steps:
    - name: Check the OS of the runner
      if: ${{ runner.os != 'Linux' }}
      shell: bash
      run: |
        echo "::error title=⛔ error hint::Support Linux Only"
        exit 1

    - name: Check architecture of the runner
      if: ${{ runner.arch != 'x64' }}
      shell: bash
      run: |
        echo "::error title=⛔ error hint::Support x64 Architecture Only"
        exit 1

    - name: Get the commit message
      id: commit
      shell: bash
      run: |
        cd "${{ inputs.path || env.GITHUB_WORKSPACE }}" && echo "$PWD"
        {
          echo "COMMIT_MSG<<EOF"
          git log -n 1 --format=%s
          echo EOF
        } >> "$GITHUB_OUTPUT"
        {
          echo "COMMIT_DESC<<EOF"
          git log -n 1 --format=%b
          echo EOF
        } >> "$GITHUB_OUTPUT"
        cat $GITHUB_OUTPUT

    - name: Install Tea
      env:
        TEA_DL_URL: "https://dl.gitea.com/tea/${{ inputs.tea-version }}\
          /tea-${{ inputs.tea-version }}-linux-amd64"
      shell: bash
      run: |
        if ! command -v tea >/dev/null 2>&1; then
          TEA_DIR=$(mktemp -d -t tmp.XXXX)
          pushd $TEA_DIR
          wget -q -nc "$TEA_DL_URL"
          wget -q -nc "${TEA_DL_URL}.sha256"
          if $(sha256sum --quiet -c "tea-${{ inputs.tea-version }}-linux-amd64.sha256"); then
            sudo mv "tea-${{ inputs.tea-version }}-linux-amd64" /usr/bin/tea
            sudo chmod +x /usr/bin/tea
            sudo cp -rf /usr/bin/tea $RUNNER_TOOL_CACHE/bin
            popd
            rm -rf $TEA_DIR
          else
            popd
            rm -rf $TEA_DIR
            echo "::error title=⛔ error hint::Tea v${{ inputs.tea-version }} Checksum Failed"
            exit 1
          fi
        else
          echo "Tea CLI already installed"
        fi
        
    - name: Login to Gitea
      shell: bash
      env:
        GIT_SERVER_URL: ${{ inputs.url }}
        GIT_SERVER_TOKEN: ${{ inputs.token }}
      run: >-
        cd "${{ inputs.path || env.GITHUB_WORKSPACE }}" &&
        echo "$PWD" &&
        tea login add
        -u "$GIT_SERVER_URL"
        -t "$GIT_SERVER_TOKEN"

    - name: Check for existing pull request
      id: no-pr
      continue-on-error: true
      shell: bash
      run: >-
        cd "${{ inputs.path || env.GITHUB_WORKSPACE }}" &&
        echo "$PWD" &&
        tea pr -f head -o simple |
        grep -q ${{ github.ref_name }} &&
        exit 1 ||
        exit 0

    - name: Create pull request
      if: steps.no-pr.outcome == 'success'
      env:
        COMMIT_MSG: ${{ steps.commit.outputs.COMMIT_MSG }}
        COMMIT_DESC: ${{ steps.commit.outputs.COMMIT_DESC }}
      shell: bash
      run: >-
        cd "${{ inputs.path || env.GITHUB_WORKSPACE }}" &&
        echo "$PWD" &&
        tea pr create --head "${{ inputs.branch }}" --base "${{ inputs.base }}" --title "${COMMIT_MSG}" --description "${COMMIT_DESC}" --assignees "${{ inputs.assignee }}" --label "${{ inputs.pr-label }}"

    - name: Skip pull request
      if: steps.no-pr.outcome == 'failure'
      shell: bash
      run: >
          echo "::error title=⛔ error hint::
          A PR already exists for this branch: ${{ github.ref_name }}"